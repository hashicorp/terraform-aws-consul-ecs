version: 2.1
orbs:
  slack: circleci/slack@3.4.2
executors:
  consul-ecs-test:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorpdev/consul-ecs-test:0.3.3
    environment:
      TEST_RESULTS: &TEST_RESULTS /tmp/test-results # path to where test results are saved
    # medium (2cpu / 4gb) with parallel invocations of Terraform sometimes ran out of memory.
    # Bumped to medium+ (3cpu / 6gb) to help with this.
    # https://circleci.com/docs/configuration-reference#resourceclass
    resource_class: xlarge

jobs:
  go-fmt-and-lint-acceptance:
    executor: consul-ecs-test
    resource_class: medium
    steps:
      - checkout

      # Restore go module cache if there is one
      - restore_cache:
          keys:
            - consul-ecs-acceptance-modcache-v2-{{ checksum "test/acceptance/go.mod" }}

      - run:
          name: go mod download
          working_directory: test/acceptance
          command: go mod download

      # Save go module cache if the go.mod file has changed
      - save_cache:
          key: consul-ecs-acceptance-modcache-v2-{{ checksum "test/acceptance/go.mod" }}
          paths:
            - "/home/circleci/go/pkg/mod"

      # check go fmt output because it does not report non-zero when there are fmt changes
      - run:
          name: check go fmt
          working_directory: test/acceptance
          command: |
            files=$(go fmt ./...)
            if [ -n "$files" ]; then
              echo "The following file(s) do not conform to go fmt:"
              echo "$files"
              exit 1
            fi

      - run:
          name: lint-consul-retry
          working_directory: test/acceptance
          command: |
            go install github.com/hashicorp/lint-consul-retry@latest
            lint-consul-retry

      - run:
          name: golangci-lint
          working_directory: test/acceptance
          command: golangci-lint run

  terraform-fmt:
    executor: consul-ecs-test
    resource_class: medium
    steps:
      - checkout
      - run: terraform fmt -check -recursive .

  acceptance:
    executor: consul-ecs-test
    parameters:
      launch_type:
        default: ""
        type: string
    steps:
      - checkout

      - run:
          # Environment variables for IAM roles are unsupported: https://github.com/aws/aws-cli/issues/5639
          name: configure aws
          command: |
            aws configure --profile ecs_user set aws_access_key_id "$AWS_ACCESS_KEY_ID"
            aws configure --profile ecs_user set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
            aws configure set role_arn "$AWS_ROLE_ARN"
            aws configure set source_profile ecs_user

            echo "unset AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "unset AWS_SECRET_ACCESS_KEY" >> $BASH_ENV

      - run:
          name: terraform init & apply
          working_directory: test/acceptance/setup-terraform
          command: |
            terraform init

            VARS="-var tags={\"build_url\":\"$CIRCLE_BUILD_URL\"}"
            VARS+=' -var launch_type=<<parameters.launch_type>>'
            case $CIRCLE_BRANCH in
                main | release/*) VARS+=" -var enable_hcp=true";;
                *) VARS+=" -var enable_hcp=false";;
            esac

            terraform apply -auto-approve $VARS

      # Restore go module cache if there is one
      - restore_cache:
          keys:
            - consul-ecs-acceptance-modcache-v2-{{ checksum "test/acceptance/go.mod" }}

      - run: mkdir -p $TEST_RESULTS

      - run:
          name: Run acceptance tests
          working_directory: test/acceptance/tests
          no_output_timeout: 1h
          command: |
            gotestsum --junitfile "$TEST_RESULTS/gotestsum-report.xml" --format standard-verbose -- ./... -p 1 -timeout 1h -v -failfast

      - store_test_results:
          path: *TEST_RESULTS
      - store_artifacts:
          path: *TEST_RESULTS

      - run:
          name: terraform destroy
          working_directory: test/acceptance/setup-terraform
          command: |
            VARS="-var tags={\"build_url\":\"$CIRCLE_BUILD_URL\"}"
            VARS+=' -var launch_type=<<parameters.launch_type>>'
            case $CIRCLE_BRANCH in
                main | release/*) VARS+=" -var enable_hcp=true";;
                *) VARS+=" -var enable_hcp=false";;
            esac

            terraform destroy -auto-approve $VARS
          when: always

workflows:
  version: 2.1
  test-and-build:
    jobs:
      - go-fmt-and-lint-acceptance
      - terraform-fmt
      - acceptance:
          matrix:
            parameters:
              launch_type:
                - FARGATE
                - EC2
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+|docs\/.*/
          requires:
            - go-fmt-and-lint-acceptance
