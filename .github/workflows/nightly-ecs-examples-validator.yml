# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: Nighly ECS example validator
on:
  workflow_dispatch:

jobs:
  get-go-version:
    uses: ./.github/workflows/reusable-get-go-version.yml
  go-fmt-and-lint-acceptance:
    needs:
    - get-go-version
    uses: ./.github/workflows/reusable-go-fmt-and-lint.yml
    with:
      go-version: ${{ needs.get-go-version.outputs.go-version }}
  terraform-fmt:
    uses: ./.github/workflows/reusable-terraform-fmt.yml
  single-cluster:
    needs:
    - terraform-fmt
    - go-fmt-and-lint-acceptance
    - get-go-version
    strategy:
      matrix:
        name:
          - Consul ECS on Fargate
          - Consul ECS on EC2
          - Consul ECS with HCP
          - Consul ECS on EC2 - Transparent Proxy
        include:
          - name: Consul ECS on Fargate
            scenario: FARGATE

          - name: Consul ECS on EC2
            scenario: EC2

          - name: Consul ECS with HCP
            scenario: HCP
          
          - name: Consul ECS on EC2 - Transparent Proxy
            scenario: EC2_TPROXY
      fail-fast: false
    uses: ./.github/workflows/reusable-ecs-example-validator.yml
    with:
      name: ${{ matrix.name }}
      scenario: ${{ matrix.scenario }}
      go-version: ${{ needs.get-go-version.outputs.go-version }}
    secrets: inherit
  gateways:
    needs:
    - single-cluster
    - get-go-version
    strategy:
      matrix:
        name:
          - API Gateway
          - Terminating Gateway
          - Terminating Gateway Transparent Proxy
        include:
          - name: API Gateway
            scenario: API_GATEWAY

          - name: Terminating Gateway
            scenario: TERMINATING_GATEWAY
          
          - name: Terminating Gateway Transparent Proxy
            scenario: TERMINATING_GATEWAY_TPROXY
          
          - name: Terminating Gateway TLS
            scenario: TERMINATING_GATEWAY_TLS
      fail-fast: false
    uses: ./.github/workflows/reusable-ecs-example-validator.yml
    with:
      name: ${{ matrix.name }}
      scenario: ${{ matrix.scenario }}
      go-version: ${{ needs.get-go-version.outputs.go-version }}
    secrets: inherit
  multi-cluster:
    needs:
    - gateways
    - get-go-version
    strategy:
      matrix:
        name:
        - Cluster Peering
        - WAN Federation with Mesh gateways
        - Locality Aware Routing
        - Service Sameness
        include:
        - name: Cluster Peering
          scenario: CLUSTER_PEERING

        - name: WAN Federation with Mesh gateways
          scenario: WAN_FEDERATION

        - name: Locality Aware Routing
          scenario: LOCALITY_AWARE_ROUTING

        - name: Service Sameness
          scenario: SERVICE_SAMENESS
      fail-fast: false
    uses: ./.github/workflows/reusable-ecs-example-validator.yml
    with:
      name: ${{ matrix.name }}
      scenario: ${{ matrix.scenario }}
      go-version: ${{ needs.get-go-version.outputs.go-version }}
    secrets: inherit