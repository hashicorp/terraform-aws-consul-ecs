name: reusable-ecs-acceptance

on:
  workflow_call:
    inputs:
      name:
        description: "The name of the job that runs the tests"
        required: true
        type: string
      go-version:
        description: "Version of Go to use to run the tests"
        required: true
        type: string
      launch-type:
        description: "The ECS launch type. Can be either EC2 or FARGATE"
        required: false
        type: string
        default: "FARGATE"
      consul-version:
        required: false
        type: string
        default: "1.17.3"
      enable-hcp:
        description: "Whether to create a HCP cluster for running acceptance tests"
        required: true
        type: boolean


env:
  TEST_RESULTS: /tmp/test-results
  GOTESTSUM_VERSION: 1.8.0
  CONSUL_LICENSE: ${{ secrets.CONSUL_LICENSE }}
  HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
  HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}

jobs:
  acceptance-tests:
    name: ${{ inputs.name }}
    runs-on: ['ubuntu-latest']
    defaults:
      run:
        working-directory: ./test/acceptance
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      with:
        go-version: ${{ inputs.go-version }}
        cache-dependency-path: ./test/acceptance/go.sum
    - name: Install base apps
      run: |
        sudo apt-get install -y expect openssl jq
    - name: Install gotestsum
      run: |
        curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${{ env.GOTESTSUM_VERSION }}/gotestsum_${{ env.GOTESTSUM_VERSION }}_linux_amd64.tar.gz" | \
        tar -xz --overwrite -C /usr/local/bin gotestsum
    - name: Install AWS CLI
      run: |
        curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
        sudo dpkg -i session-manager-plugin.deb
        aws --version
        echo session-manager-plugin version "$(session-manager-plugin --version)"
    - name: Install AWS ECS CLI
      run: |
        curl -sSL "https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest" -o /usr/local/bin/ecs-cli
        chmod +x /usr/local/bin/ecs-cli
        ecs-cli --version
    - name: Assume AWS IAM Role
      uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
      with:
        role-to-assume: ${{ secrets.AWS_ECS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_ECS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ECS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ECS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
    - name: terraform init & apply
      run: |
        cd setup-terraform/
        VARS="-var tags={\"build_url\":\"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}"
        VARS+=' -var launch_type=${{ inputs.launch-type }}'
        VARS+=' -var consul_version=${{ inputs.consul-version }}'
        VARS+=' -var hcp_project_id=${{ secrets.HCP_PROJECT_ID }}'
        case $GITHUB_REF_NAME in
            main | release/*) VARS+=" -var enable_hcp=${{ inputs.enable-hcp }}";;
            *) VARS+=" -var enable_hcp=false";;
        esac
        terraform init
        terraform apply -auto-approve $VARS
    - name: Acceptance tests
      run: |
        mkdir -p "$TEST_RESULTS"
        cd tests/
        gotestsum --junitfile "$TEST_RESULTS/gotestsum-report.xml" --format standard-verbose -- ./... -p 1 -timeout 1h -v -failfast
    - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: always()
      with:
        name: acceptance-test-results
        path: ${{ env.TEST_RESULTS }}/gotestsum-report.xml
    - name: terraform destroy
      if: always()
      run: |
        cd setup-terraform/
        VARS="-var tags={\"build_url\":\"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}"
        VARS+=' -var launch_type=${{ inputs.launch-type }}'
        VARS+=' -var consul_version=${{ inputs.consul-version }}'
        VARS+=' -var hcp_project_id=${{ secrets.HCP_PROJECT_ID }}'
        case $GITHUB_REF_NAME in
            main | release/*) VARS+=" -var enable_hcp=${{ inputs.enable-hcp }}";;
            *) VARS+=" -var enable_hcp=false";;
        esac
        terraform destroy -auto-approve $VARS
